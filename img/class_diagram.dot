digraph class_diagram {

    node [
        shape = record
    ]
    compound = true

    /* Header with version information */
    main_note [
        shape = note
        style = filled
        fillcolor = yellow
        label = "AG-Panel Project Class Diagramm v0.2a\n(C) 2020 Andriy Golovnya\nAuthor: Andriy Golovnya (andriy.golovnya@gmail.com)"
    ]

    /* Backlights group of classes */
    subgraph cluster_backlights {
        node [
            style = filled
            fillcolor = "pink"
        ]
        style = dotted
        label = "Backlights"
        AbstractBacklight [
            label = "{\<abstract\>AbstractBacklight||+SetOn()\n+SetBrightness()\n+SetRGB()\n-Init()\n-Exit()}"
        ]
        BinaryBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
        I2CRGBPWMBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
        NoneBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
        PWMBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
        RGBBinaryBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
        RGBPWMBacklight -> AbstractBacklight [style = dashed, arrowhead = onormal]
    }

    /* Fonts group of classes */
    subgraph cluster_fonts {
        node [
            style = filled
            fillcolor = "gray90"
        ]
        style = dotted
        label = "Fonts"
        Glyph [
            label = "{Glyph|+m_GlyphXSize\n+m_GlyphYSize\n+m_LineWidth\n+m_NumberLines\n+m_PixelBuffer|}"
        ]
        AbstractFont [
            label = "{\<abstract\>AbstractFont||+GetGlyphXSize()\n+GetGlyphYSize()\n+GetGlyph()\n-Init()\n-Exit()}"
        ]
        AbstractFixedFont [
            label = "{\<abstract\>AbstractFixedFont|*m_GlyphXSize\n*m_GlyphYSize\n*m_GlyphData\n*m_DataRangeBegin\n*m_DataRangeEnd\n*m_DefaultGlyph\n*m_Glyph|+GetGlyphXSize()\n+GetGlyphYSize()\n+GetGlyph()\n-Init()\n-Exit()}"
        ]
        AbstractFont -> Glyph [arrowhead = open]
        AbstractFixedFont -> AbstractFont [style = solid, arrowhead = onormal]
        AbstractFixedFont -> Glyph [style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]
        Fixed8x8TestFont -> AbstractFixedFont [style = dashed, arrowhead = onormal]
    }

    /* LCDs group of classes */
    subgraph cluster_lcds {
        node [
            style = filled
            fillcolor = "lightblue"
        ]
        style = dotted
        label = "LCDs"
        AbstractLCD [
            label = "{\<abstract\>AbstractLCD|*m_Backlight\n*m_Columns\n*m_Rows|+SetBacklight()\n+Clear()\n+SetCursor()\n+Print()\n+GetColumns()\n+GetRows()\n-Init()\n-Exit()}"
        ]
        AbstractTextLCD [
            label = "{\<abstract\>AbstractTextLCD|*m_Backlight\n*m_Columns\n*m_Rows|+SetBacklight()\n+Clear()\n+SetCursor()\n+Print()\n+GetColumns()\n+GetRows()\n+Write()\n+Command()\n-Init()\n-Exit()}"
        ]
        AbstractGraphicLCD [
            label = "{\<abstract\>AbstractGraphicLCD|*m_Backlight\n*m_Columns\n*m_Rows\n*m_Font\n*m_XSize\n*m_YSize\n*m_XOffset\n*m_YOffset|+SetBacklight()\n+Clear()\n+SetCursor()\n+Print()\n+GetColumns()\n+GetRows()\n*CalculateTextSize()\n-Init()\n-Exit()}"
        ]
        AbstractTextLCD -> AbstractLCD [style = solid, arrowhead = onormal]
        I2CAIP31068TextLCD -> AbstractTextLCD [style = dashed, arrowhead = onormal]
        I2CPCF8574TextLCD -> AbstractTextLCD [style = dashed, arrowhead = onormal]
        I2CRGBTextLCD -> AbstractTextLCD [style = dashed, arrowhead = onormal]
        PPITextLCD -> AbstractTextLCD [style = dashed, arrowhead = onormal]
        SPIAIP31068TextLCD -> AbstractTextLCD [style = dashed, arrowhead = onormal]
        AbstractGraphicLCD -> AbstractLCD [style = solid, arrowhead = onormal]
    }

    /* UARTSs group of classes */
    subgraph cluster_uarts {
        node [
            style = filled
            fillcolor = "cyan"
        ]
        style = dotted
        label = "UARTs"
        AbstractUART [
            label = "{\<abstract\>AbstractUART|*m_BaudRate|+PutCh()\n+GetCh()\n+Prefill()\n+Available()\n+GetBaudRate()\n+PutStr()\n-Init()\n-Exit()}"
        ]
        BufferedUART -> AbstractUART [style = dashed, arrowhead = onormal]
        BufferedUART -> AbstractUART [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]
        BufferedUART -> note_for_BufferedUART [style = dashed, dir = none]
        HardwareUART -> AbstractUART [style = dashed, arrowhead = onormal]
        NoneUART -> AbstractUART [style = dashed, arrowhead = onormal]
        SoftwareUART -> AbstractUART [style = dashed, arrowhead = onormal]
        USBVirtualUART -> AbstractUART [style = dashed, arrowhead = onormal]
        TextLoggingUART -> AbstractUART [style = dashed, arrowhead = onormal]
        TextLoggingUART -> AbstractUART [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "2"]
        TextLoggingUART -> note_for_TextLoggingUART [style = dashed, dir = none]
        /* UARTs Notes */
        note_for_BufferedUART [
            shape = note
            style = filled
            fillcolor = yellow
            label = "Uses another UART\nclass and implements\nan extra buffer for it"
        ]
        note_for_TextLoggingUART [
            shape = note
            style = filled
            fillcolor = yellow
            label = "Uses first UART as\ntransparent input/output\nand second UART for logging\nof trafic in text form"
        ]
    }

    /* Keyboards group of classes */
    subgraph cluster_keyboards {
        node [
            style = filled
            fillcolor = "magenta"
        ]
        style = dotted
        label = "Keyboards"
        AbstractKeyboard [
            label = "{\<abstract\>AbstractKeyboard||+GetKey()\n+GetKeyCount()\n-Init()\n-Exit()}"
        ]
        AnalogJoystick -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        AnalogKeypad -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        AnalogMatrix -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        DigitalMatrix -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        I2CMPR121CapacitiveKeypad -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        I2CRGBKeypad -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        I2CTTP229CapacitiveKeypad -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        JoinedKeyboard -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        JoinedKeyboard -> AbstractKeyboard [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1..*"]
        JoinedKeyboard -> note_for_JoinedKeyboard [style = dashed, dir = none]
        NoneKeyboard -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        RotaryEncoder -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        SimpleButton -> AbstractKeyboard [style = dashed, arrowhead = onormal]
        /* Keybords notes */
        note_for_JoinedKeyboard [
            shape = note
            style = filled
            fillcolor = yellow
            label = "Combines several keyboards\nand presents them as\na single keyboard unit"
        ]
    }

    /* Protocols group of classes */
    subgraph cluster_protocols {
        node [
            style = filled
            fillcolor = "antiquewhite"
        ]
        style = dotted
        label = "Protocols"
        AbstractProtocol [
            label = "{\<abstract\>AbstractProtocol|*m_UART\n*m_LCD\n*m_Keyboard|+Loop()\n+Yield()\n-Init()\n-Exit()}"
        ]
        LoSPanelProtocol -> AbstractProtocol [style = dashed]
        RawSerialProtocol -> AbstractProtocol [style = dashed]
    }

    /* Relationships of main classes */
    AbstractLCD -> AbstractBacklight [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]
    AbstractGraphicLCD -> AbstractFont [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]
    AbstractProtocol -> AbstractLCD [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]
    AbstractProtocol -> AbstractUART [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]
    AbstractProtocol -> AbstractKeyboard [style = solid, dir = both, arrowhead = open, arrowtail = ediamond, headlabel = "1"]

    main [
        style = filled
        fillcolor = "crimson"
        label = "setup() and loop()"
    ]
    main -> AbstractBacklight [lhead = cluster_backlights, style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]
    main -> AbstractFont [lhead = cluster_fonts, style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]
    main -> AbstractLCD [lhead = cluster_lcds, style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]
    main -> AbstractKeyboard [lhead = cluster_keyboards, style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]
    main -> AbstractProtocol [lhead = cluster_protocols, style = solid, dir = both, arrowhead = open, arrowtail = diamond, headlabel = "1"]

    main -> note_for_main [style = dashed, dir = none]
    note_for_main [
        shape = note
        style = filled
        fillcolor = yellow
        label = "Create instances of\nproper classes based on\nuser defined configuration,\nlinks all classes together\nand starts the protocol execution"
    ]
}
